{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.prefix = $event),\n    placeholder: \"Filter prefix\"\n  }, null, 512), [[_vModelText, $data.prefix]])]), _withDirectives(_createElementVNode(\"select\", {\n    size: \"5\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selected = $event)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredNames, ID => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: ID\n    }, _toDisplayString(ID), 1);\n  }), 128))], 512), [[_vModelSelect, $data.selected]]), _createElementVNode(\"label\", null, [_createTextVNode(\"Nama\"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.nama = $event)\n  }, null, 512), [[_vModelText, $data.nama]])]), _createElementVNode(\"label\", null, [_createTextVNode(\"Nim: \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.nim = $event)\n  }, null, 512), [[_vModelText, $data.nim]])]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.create && $options.create(...args))\n  }, \"Create\"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.update && $options.update(...args))\n  }, \"Update\"), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.del && $options.del(...args))\n  }, \"Delete\")])], 64);\n}","map":{"version":3,"mappings":";;EA+DOA,KAAK,EAAC;AAAS;;6DATpBC,oBAA+D,8BAA1DA,oBAAoD;+DAApCC,YAAM;IAAEC,WAAW,EAAC;gCAApBD,YAAM,uBAE3BD,oBAES;IAFDG,IAAI,EAAC,GAAG;+DAAUF,cAAQ;yBAChCG,oBAA+DC,6BAA1CC,sBAAa,EAAnBC,EAAE;yBAAjBH,oBAA+D;MAA1BI,GAAG,EAAED;IAAE,oBAAKA,EAAE;qCAD3BN,cAAQ,KAIlCD,oBAAyC,iCAAlC,MAAI,uCAAsB;+DAANC,UAAI;gCAAJA,UAAI,OAC/BD,oBAAyC,iCAAlC,OAAK,uCAAqB;+DAALC,SAAG;gCAAHA,SAAG,OAE/BD,oBAIM,OAJNS,UAIM,GAHJT,oBAAuC;IAA9BU,OAAK,yCAAEJ,2CAAM;KAAE,QAAM,GAC9BN,oBAAuC;IAA9BU,OAAK,yCAAEJ,2CAAM;KAAE,QAAM,GAC9BN,oBAAoC;IAA3BU,OAAK,yCAAEJ,qCAAG;KAAE,QAAM","names":["class","_createElementVNode","$data","placeholder","size","_createElementBlock","_Fragment","$options","ID","key","_hoisted_1","onClick"],"sourceRoot":"","sources":["D:\\filebadri\\UASTWEB-master\\profil\\src\\views\\AboutView.vue"],"sourcesContent":["<script>\nexport default {\n  data() {\n    return {\n      names: ['001, ucup', '002, samsul', '003, jumingten'],\n      selected: '',\n      prefix: '',\n      nama: '',\n      nim: ''\n    }\n  },\n  computed: {\n    filteredNames() {\n      return this.names.filter((n) =>\n        n.toLowerCase().startsWith(this.prefix.toLowerCase())\n      )\n    }\n  },\n  watch: {\n    selected(ID) {\n      ;[this.nim, this.nama] = ID.split(', ')\n    }\n  },\n  methods: {\n    create() {\n      if (this.hasValidInput()) {\n        const fullName = `${this.nim}, ${this.nama}`\n        if (!this.names.includes(fullName)) {\n          this.names.push(fullName)\n          this.nama = this.nim = ''\n        }\n      }\n    },\n    update() {\n      if (this.hasValidInput() && this.selected) {\n        const i = this.names.indexOf(this.selected)\n        this.names[i] = this.selected = `${this.nim}, ${this.nama}`\n      }\n    },\n    del() {\n      if (this.selected) {\n        const i = this.names.indexOf(this.selected)\n        this.names.splice(i, 1)\n        this.selected = this.nama = this.nim = ''\n      }\n    },\n    hasValidInput() {\n      return this.nama.trim() && this.nim.trim()\n    }\n  }\n}\n</script>\n\n<template>\n  <div><input v-model=\"prefix\" placeholder=\"Filter prefix\"></div>\n\n  <select size=\"5\" v-model=\"selected\">\n    <option v-for=\"ID in filteredNames\" :key=\"ID\">{{ ID }}</option>\n  </select>\n\n  <label>Nama<input v-model=\"nama\"></label>\n  <label>Nim: <input v-model=\"nim\"></label>\n\n  <div class=\"buttons\">\n    <button @click=\"create\">Create</button>\n    <button @click=\"update\">Update</button>\n    <button @click=\"del\">Delete</button>\n  </div>\n</template>\n<style>\n#AboutView{\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\n* {\n  font-size: inherit;\n}\n\ninput {\n  display: block;\n  margin-bottom: 10px;\n}\n\nselect {\n  float: left;\n  margin: 0 1em 1em 0;\n  width: 14em;\n}\n\n.buttons {\n  clear: both;\n}\n\nbutton + button {\n  margin-left: 5px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}